# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
    
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
      #  with:
      #     go-version: 
        
      - name: Install dependenses structs
        run: go get github.com/fatih/structs
      - name: Install dependenses telegram bot api
        run: go get github.com/go-telegram-bot-api/telegram-bot-api
      - name: Install dependenses mapstructure
        run: go get github.com/mitchellh/mapstructure
      - name: Build app
        run: go build main.go
      - name: Copy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
     #     port: ${{ secrets.PORT }}
          source: "."
          target: "/srv/unix_sect_bot_v3"
          rm: true
      #  run: go run main.go
      - name: run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          script: |
            cd /srv/unix_sect_bot_v3
            docker stop $(docker ps -a -q  --filter ancestor=unix_sect_bot_v3_little_yoda)
            docker-compose up -d --build

      
      

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
